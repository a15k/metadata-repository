{
  "swagger": "2.0",
  "info": {
    "title": "Assessment Network Metadata API V1",
    "version": "v1"
  },
  "securityDefinitions": {
    "apiToken": {
      "type": "apiKey",
      "in": "header",
      "name": "Metadata-Api-Token"
    }
  },
  "paths": {
    "/api/resources/{resource_id}/metadatas": {
      "get": {
        "summary": "List all Metadata created by the current application for the given Resource",
        "tags": [
          "Metadata"
        ],
        "operationId": "getResourceMetadata",
        "produces": [
          "application/vnd.api.metadata.a15k.org+json"
        ],
        "parameters": [
          {
            "name": "resource_id",
            "in": "path",
            "type": "string",
            "description": "The associated Resource's Id",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "missing api token",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Metadata JSON API Schema",
              "description": "JSON API schema for Metadata objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "value"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "resource",
                      "format"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "403": {
            "description": "invalid api token",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Metadata JSON API Schema",
              "description": "JSON API schema for Metadata objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "value"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "resource",
                      "format"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "apiToken": []
          }
        ]
      },
      "post": {
        "summary": "Create a new Metadata with a random Id for the given Resource",
        "tags": [
          "Metadata"
        ],
        "operationId": "createResourceMetadata",
        "produces": [
          "application/vnd.api.metadata.a15k.org+json"
        ],
        "parameters": [
          {
            "name": "resource_id",
            "in": "path",
            "type": "string",
            "description": "The associated Resource's Id",
            "required": true
          },
          {
            "name": "params",
            "in": "body",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Metadata JSON API Schema",
              "description": "JSON API schema for Metadata objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "value"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "resource",
                      "format"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "missing relationship id",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Metadata JSON API Schema",
              "description": "JSON API schema for Metadata objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "value"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "resource",
                      "format"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "403": {
            "description": "forbidden application id",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Metadata JSON API Schema",
              "description": "JSON API schema for Metadata objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "value"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "resource",
                      "format"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "409": {
            "description": "invalid relationship type",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Metadata JSON API Schema",
              "description": "JSON API schema for Metadata objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "value"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "resource",
                      "format"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "apiToken": []
          }
        ],
        "consumes": [
          "application/vnd.api.metadata.a15k.org+json"
        ]
      }
    },
    "/api/resources/{resource_id}/metadatas/{id}": {
      "get": {
        "summary": "View the Metadata with the given Id for the given Resource",
        "tags": [
          "Metadata"
        ],
        "operationId": "getResourceMetadataWithId",
        "produces": [
          "application/vnd.api.metadata.a15k.org+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "The Metadata object's Id",
            "required": true
          },
          {
            "name": "resource_id",
            "in": "path",
            "type": "string",
            "description": "The associated Resource's Id",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "missing api token",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Metadata JSON API Schema",
              "description": "JSON API schema for Metadata objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "value"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "resource",
                      "format"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "403": {
            "description": "invalid api token",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Metadata JSON API Schema",
              "description": "JSON API schema for Metadata objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "value"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "resource",
                      "format"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "apiToken": []
          }
        ]
      },
      "delete": {
        "summary": "Delete the Metadata with the given Id for the given Resource",
        "tags": [
          "Metadata"
        ],
        "operationId": "deleteResourceMetadataWithId",
        "produces": [
          "application/vnd.api.metadata.a15k.org+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "The Metadata object's Id",
            "required": true
          },
          {
            "name": "resource_id",
            "in": "path",
            "type": "string",
            "description": "The associated Resource's Id",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "missing api token",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Metadata JSON API Schema",
              "description": "JSON API schema for Metadata objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "value"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "resource",
                      "format"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "403": {
            "description": "invalid api token",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Metadata JSON API Schema",
              "description": "JSON API schema for Metadata objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "value"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "resource",
                      "format"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "apiToken": []
          }
        ]
      },
      "post": {
        "summary": "Create a new Metadata with the given Id for the given Resource",
        "tags": [
          "Metadata"
        ],
        "operationId": "createResourceMetadataWithId",
        "produces": [
          "application/vnd.api.metadata.a15k.org+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "The Metadata object's Id",
            "required": true
          },
          {
            "name": "resource_id",
            "in": "path",
            "type": "string",
            "description": "The associated Resource's Id",
            "required": true
          },
          {
            "name": "params",
            "in": "body",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Metadata JSON API Schema",
              "description": "JSON API schema for Metadata objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "value"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "resource",
                      "format"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "missing relationship id",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Metadata JSON API Schema",
              "description": "JSON API schema for Metadata objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "value"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "resource",
                      "format"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "403": {
            "description": "forbidden application id",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Metadata JSON API Schema",
              "description": "JSON API schema for Metadata objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "value"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "resource",
                      "format"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "409": {
            "description": "invalid relationship type",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Metadata JSON API Schema",
              "description": "JSON API schema for Metadata objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "value"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "resource",
                      "format"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "apiToken": []
          }
        ],
        "consumes": [
          "application/vnd.api.metadata.a15k.org+json"
        ]
      },
      "put": {
        "summary": "Update the Metadata with the given Id for the given Resource",
        "tags": [
          "Metadata"
        ],
        "operationId": "updateResourceMetadataWithId",
        "produces": [
          "application/vnd.api.metadata.a15k.org+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "The Metadata object's Id",
            "required": true
          },
          {
            "name": "resource_id",
            "in": "path",
            "type": "string",
            "description": "The associated Resource's Id",
            "required": true
          },
          {
            "name": "params",
            "in": "body",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Metadata JSON API Schema",
              "description": "JSON API schema for Metadata objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "value"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "resource",
                      "format"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "missing relationship id",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Metadata JSON API Schema",
              "description": "JSON API schema for Metadata objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "value"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "resource",
                      "format"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "403": {
            "description": "forbidden application id",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Metadata JSON API Schema",
              "description": "JSON API schema for Metadata objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "value"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "resource",
                      "format"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "409": {
            "description": "invalid relationship type",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Metadata JSON API Schema",
              "description": "JSON API schema for Metadata objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "value"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "resource",
                      "format"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "404": {
            "description": "not visible",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Metadata JSON API Schema",
              "description": "JSON API schema for Metadata objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "value"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "resource",
                      "format"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "apiToken": []
          }
        ],
        "consumes": [
          "application/vnd.api.metadata.a15k.org+json"
        ]
      },
      "patch": {
        "summary": "Update the Metadata with the given Id for the given Resource",
        "tags": [
          "Metadata"
        ],
        "operationId": "updateMetadataWithId",
        "produces": [
          "application/vnd.api.metadata.a15k.org+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "The Metadata object's Id",
            "required": true
          },
          {
            "name": "resource_id",
            "in": "path",
            "type": "string",
            "description": "The associated Resource's Id",
            "required": true
          },
          {
            "name": "params",
            "in": "body",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Metadata JSON API Schema",
              "description": "JSON API schema for Metadata objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "value"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "resource",
                      "format"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "missing relationship id",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Metadata JSON API Schema",
              "description": "JSON API schema for Metadata objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "value"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "resource",
                      "format"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "403": {
            "description": "forbidden application id",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Metadata JSON API Schema",
              "description": "JSON API schema for Metadata objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "value"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "resource",
                      "format"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "409": {
            "description": "invalid relationship type",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Metadata JSON API Schema",
              "description": "JSON API schema for Metadata objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "value"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "resource",
                      "format"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "404": {
            "description": "not visible",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Metadata JSON API Schema",
              "description": "JSON API schema for Metadata objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "value"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "resource",
                      "format"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "apiToken": []
          }
        ],
        "consumes": [
          "application/vnd.api.metadata.a15k.org+json"
        ]
      }
    },
    "/api/resources": {
      "get": {
        "summary": "List all Resources created by the current application",
        "tags": [
          "Resource"
        ],
        "operationId": "getResources",
        "produces": [
          "application/vnd.api.metadata.a15k.org+json"
        ],
        "responses": {
          "400": {
            "description": "missing api token",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Resource JSON API Schema",
              "description": "JSON API schema for Resource objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "uri",
                      "resource_type",
                      "title",
                      "content",
                      "highlight"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "format",
                      "language"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "403": {
            "description": "invalid api token",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Resource JSON API Schema",
              "description": "JSON API schema for Resource objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "uri",
                      "resource_type",
                      "title",
                      "content",
                      "highlight"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "format",
                      "language"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "apiToken": []
          }
        ]
      },
      "post": {
        "summary": "Create a new Resource with a random Id",
        "tags": [
          "Resource"
        ],
        "operationId": "createResource",
        "produces": [
          "application/vnd.api.metadata.a15k.org+json"
        ],
        "responses": {
          "400": {
            "description": "missing relationship id",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Resource JSON API Schema",
              "description": "JSON API schema for Resource objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "uri",
                      "resource_type",
                      "title",
                      "content",
                      "highlight"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "format",
                      "language"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "403": {
            "description": "forbidden application id",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Resource JSON API Schema",
              "description": "JSON API schema for Resource objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "uri",
                      "resource_type",
                      "title",
                      "content",
                      "highlight"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "format",
                      "language"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "409": {
            "description": "invalid relationship type",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Resource JSON API Schema",
              "description": "JSON API schema for Resource objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "uri",
                      "resource_type",
                      "title",
                      "content",
                      "highlight"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "format",
                      "language"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "apiToken": []
          }
        ],
        "consumes": [
          "application/vnd.api.metadata.a15k.org+json"
        ],
        "parameters": [
          {
            "name": "params",
            "in": "body",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Resource JSON API Schema",
              "description": "JSON API schema for Resource objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "uri",
                      "resource_type",
                      "title",
                      "content",
                      "highlight"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "format",
                      "language"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ]
      }
    },
    "/api/resources/{id}": {
      "get": {
        "summary": "View the Resource with the given Id",
        "tags": [
          "Resource"
        ],
        "operationId": "getResourceWithId",
        "produces": [
          "application/vnd.api.metadata.a15k.org+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "The Resource object's Id",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "missing api token",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Resource JSON API Schema",
              "description": "JSON API schema for Resource objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "uri",
                      "resource_type",
                      "title",
                      "content",
                      "highlight"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "format",
                      "language"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "403": {
            "description": "invalid api token",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Resource JSON API Schema",
              "description": "JSON API schema for Resource objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "uri",
                      "resource_type",
                      "title",
                      "content",
                      "highlight"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "format",
                      "language"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "apiToken": []
          }
        ]
      },
      "delete": {
        "summary": "Delete the Resource with the given Id",
        "tags": [
          "Resource"
        ],
        "operationId": "deleteResourceWithId",
        "produces": [
          "application/vnd.api.metadata.a15k.org+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "The Resource object's Id",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "missing api token",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Resource JSON API Schema",
              "description": "JSON API schema for Resource objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "uri",
                      "resource_type",
                      "title",
                      "content",
                      "highlight"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "format",
                      "language"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "403": {
            "description": "invalid api token",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Resource JSON API Schema",
              "description": "JSON API schema for Resource objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "uri",
                      "resource_type",
                      "title",
                      "content",
                      "highlight"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "format",
                      "language"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "apiToken": []
          }
        ]
      },
      "post": {
        "summary": "Create a new Resource with the given Id",
        "tags": [
          "Resource"
        ],
        "operationId": "createResourceWithId",
        "produces": [
          "application/vnd.api.metadata.a15k.org+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "The Resource object's Id",
            "required": true
          },
          {
            "name": "params",
            "in": "body",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Resource JSON API Schema",
              "description": "JSON API schema for Resource objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "uri",
                      "resource_type",
                      "title",
                      "content",
                      "highlight"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "format",
                      "language"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "missing relationship id",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Resource JSON API Schema",
              "description": "JSON API schema for Resource objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "uri",
                      "resource_type",
                      "title",
                      "content",
                      "highlight"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "format",
                      "language"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "403": {
            "description": "forbidden application id",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Resource JSON API Schema",
              "description": "JSON API schema for Resource objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "uri",
                      "resource_type",
                      "title",
                      "content",
                      "highlight"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "format",
                      "language"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "409": {
            "description": "invalid relationship type",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Resource JSON API Schema",
              "description": "JSON API schema for Resource objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "uri",
                      "resource_type",
                      "title",
                      "content",
                      "highlight"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "format",
                      "language"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "apiToken": []
          }
        ],
        "consumes": [
          "application/vnd.api.metadata.a15k.org+json"
        ]
      },
      "put": {
        "summary": "Update the Resource with the given Id",
        "tags": [
          "Resource"
        ],
        "operationId": "updateResourceWithId",
        "produces": [
          "application/vnd.api.metadata.a15k.org+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "The Resource object's Id",
            "required": true
          },
          {
            "name": "params",
            "in": "body",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Resource JSON API Schema",
              "description": "JSON API schema for Resource objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "uri",
                      "resource_type",
                      "title",
                      "content",
                      "highlight"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "format",
                      "language"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "missing relationship id",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Resource JSON API Schema",
              "description": "JSON API schema for Resource objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "uri",
                      "resource_type",
                      "title",
                      "content",
                      "highlight"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "format",
                      "language"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "403": {
            "description": "forbidden application id",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Resource JSON API Schema",
              "description": "JSON API schema for Resource objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "uri",
                      "resource_type",
                      "title",
                      "content",
                      "highlight"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "format",
                      "language"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "409": {
            "description": "invalid relationship type",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Resource JSON API Schema",
              "description": "JSON API schema for Resource objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "uri",
                      "resource_type",
                      "title",
                      "content",
                      "highlight"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "format",
                      "language"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "404": {
            "description": "not visible",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Resource JSON API Schema",
              "description": "JSON API schema for Resource objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "uri",
                      "resource_type",
                      "title",
                      "content",
                      "highlight"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "format",
                      "language"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "apiToken": []
          }
        ],
        "consumes": [
          "application/vnd.api.metadata.a15k.org+json"
        ]
      },
      "patch": {
        "summary": "Update the Resource with the given Id",
        "tags": [
          "Resource"
        ],
        "operationId": "updateResourceWithId",
        "produces": [
          "application/vnd.api.metadata.a15k.org+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "The Resource object's Id",
            "required": true
          },
          {
            "name": "params",
            "in": "body",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Resource JSON API Schema",
              "description": "JSON API schema for Resource objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "uri",
                      "resource_type",
                      "title",
                      "content",
                      "highlight"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "format",
                      "language"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "missing relationship id",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Resource JSON API Schema",
              "description": "JSON API schema for Resource objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "uri",
                      "resource_type",
                      "title",
                      "content",
                      "highlight"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "format",
                      "language"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "403": {
            "description": "forbidden application id",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Resource JSON API Schema",
              "description": "JSON API schema for Resource objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "uri",
                      "resource_type",
                      "title",
                      "content",
                      "highlight"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "format",
                      "language"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "409": {
            "description": "invalid relationship type",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Resource JSON API Schema",
              "description": "JSON API schema for Resource objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "uri",
                      "resource_type",
                      "title",
                      "content",
                      "highlight"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "format",
                      "language"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "404": {
            "description": "not visible",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Resource JSON API Schema",
              "description": "JSON API schema for Resource objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "uri",
                      "resource_type",
                      "title",
                      "content",
                      "highlight"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "format",
                      "language"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "apiToken": []
          }
        ],
        "consumes": [
          "application/vnd.api.metadata.a15k.org+json"
        ]
      }
    },
    "/api/resources/{resource_id}/stats": {
      "get": {
        "summary": "List all Stats created by the current application for the given Resource",
        "tags": [
          "Stats"
        ],
        "operationId": "getResourceStats",
        "produces": [
          "application/vnd.api.metadata.a15k.org+json"
        ],
        "parameters": [
          {
            "name": "resource_id",
            "in": "path",
            "type": "string",
            "description": "The associated Resource's Id",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "missing api token",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Stats JSON API Schema",
              "description": "JSON API schema for Stats objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "value"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "resource",
                      "format"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "403": {
            "description": "invalid api token",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Stats JSON API Schema",
              "description": "JSON API schema for Stats objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "value"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "resource",
                      "format"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "apiToken": []
          }
        ]
      },
      "post": {
        "summary": "Create a new Stats with a random Id for the given Resource",
        "tags": [
          "Stats"
        ],
        "operationId": "createResourceStats",
        "produces": [
          "application/vnd.api.metadata.a15k.org+json"
        ],
        "parameters": [
          {
            "name": "resource_id",
            "in": "path",
            "type": "string",
            "description": "The associated Resource's Id",
            "required": true
          },
          {
            "name": "params",
            "in": "body",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Stats JSON API Schema",
              "description": "JSON API schema for Stats objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "value"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "resource",
                      "format"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "missing relationship id",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Stats JSON API Schema",
              "description": "JSON API schema for Stats objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "value"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "resource",
                      "format"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "403": {
            "description": "forbidden application id",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Stats JSON API Schema",
              "description": "JSON API schema for Stats objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "value"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "resource",
                      "format"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "409": {
            "description": "invalid relationship type",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Stats JSON API Schema",
              "description": "JSON API schema for Stats objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "value"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "resource",
                      "format"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "apiToken": []
          }
        ],
        "consumes": [
          "application/vnd.api.metadata.a15k.org+json"
        ]
      }
    },
    "/api/resources/{resource_id}/stats/{id}": {
      "get": {
        "summary": "View the Stats with the given Id for the given Resource",
        "tags": [
          "Stats"
        ],
        "operationId": "getResourceStatsWithId",
        "produces": [
          "application/vnd.api.metadata.a15k.org+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "The Stats object's Id",
            "required": true
          },
          {
            "name": "resource_id",
            "in": "path",
            "type": "string",
            "description": "The associated Resource's Id",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "missing api token",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Stats JSON API Schema",
              "description": "JSON API schema for Stats objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "value"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "resource",
                      "format"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "403": {
            "description": "invalid api token",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Stats JSON API Schema",
              "description": "JSON API schema for Stats objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "value"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "resource",
                      "format"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "apiToken": []
          }
        ]
      },
      "delete": {
        "summary": "Delete the Stats with the given Id for the given Resource",
        "tags": [
          "Stats"
        ],
        "operationId": "deleteResourceStatsWithId",
        "produces": [
          "application/vnd.api.metadata.a15k.org+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "The Stats object's Id",
            "required": true
          },
          {
            "name": "resource_id",
            "in": "path",
            "type": "string",
            "description": "The associated Resource's Id",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "missing api token",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Stats JSON API Schema",
              "description": "JSON API schema for Stats objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "value"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "resource",
                      "format"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "403": {
            "description": "invalid api token",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Stats JSON API Schema",
              "description": "JSON API schema for Stats objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "value"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "resource",
                      "format"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "apiToken": []
          }
        ]
      },
      "post": {
        "summary": "Create a new Stats with the given Id for the given Resource",
        "tags": [
          "Stats"
        ],
        "operationId": "createResourceStatsWithId",
        "produces": [
          "application/vnd.api.metadata.a15k.org+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "The Stats object's Id",
            "required": true
          },
          {
            "name": "resource_id",
            "in": "path",
            "type": "string",
            "description": "The associated Resource's Id",
            "required": true
          },
          {
            "name": "params",
            "in": "body",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Stats JSON API Schema",
              "description": "JSON API schema for Stats objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "value"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "resource",
                      "format"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "missing relationship id",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Stats JSON API Schema",
              "description": "JSON API schema for Stats objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "value"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "resource",
                      "format"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "403": {
            "description": "forbidden application id",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Stats JSON API Schema",
              "description": "JSON API schema for Stats objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "value"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "resource",
                      "format"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "409": {
            "description": "invalid relationship type",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Stats JSON API Schema",
              "description": "JSON API schema for Stats objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "value"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "resource",
                      "format"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "apiToken": []
          }
        ],
        "consumes": [
          "application/vnd.api.metadata.a15k.org+json"
        ]
      },
      "put": {
        "summary": "Update the Stats with the given Id for the given Resource",
        "tags": [
          "Stats"
        ],
        "operationId": "updateResourceStatsWithId",
        "produces": [
          "application/vnd.api.metadata.a15k.org+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "The Stats object's Id",
            "required": true
          },
          {
            "name": "resource_id",
            "in": "path",
            "type": "string",
            "description": "The associated Resource's Id",
            "required": true
          },
          {
            "name": "params",
            "in": "body",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Stats JSON API Schema",
              "description": "JSON API schema for Stats objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "value"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "resource",
                      "format"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "missing relationship id",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Stats JSON API Schema",
              "description": "JSON API schema for Stats objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "value"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "resource",
                      "format"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "403": {
            "description": "forbidden application id",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Stats JSON API Schema",
              "description": "JSON API schema for Stats objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "value"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "resource",
                      "format"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "409": {
            "description": "invalid relationship type",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Stats JSON API Schema",
              "description": "JSON API schema for Stats objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "value"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "resource",
                      "format"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "404": {
            "description": "not visible",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Stats JSON API Schema",
              "description": "JSON API schema for Stats objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "value"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "resource",
                      "format"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "apiToken": []
          }
        ],
        "consumes": [
          "application/vnd.api.metadata.a15k.org+json"
        ]
      },
      "patch": {
        "summary": "Update the Stats with the given Id for the given Resource",
        "tags": [
          "Stats"
        ],
        "operationId": "updateStatsWithId",
        "produces": [
          "application/vnd.api.metadata.a15k.org+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "The Stats object's Id",
            "required": true
          },
          {
            "name": "resource_id",
            "in": "path",
            "type": "string",
            "description": "The associated Resource's Id",
            "required": true
          },
          {
            "name": "params",
            "in": "body",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Stats JSON API Schema",
              "description": "JSON API schema for Stats objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "value"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "resource",
                      "format"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "missing relationship id",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Stats JSON API Schema",
              "description": "JSON API schema for Stats objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "value"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "resource",
                      "format"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "403": {
            "description": "forbidden application id",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Stats JSON API Schema",
              "description": "JSON API schema for Stats objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "value"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "resource",
                      "format"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "409": {
            "description": "invalid relationship type",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Stats JSON API Schema",
              "description": "JSON API schema for Stats objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "value"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "resource",
                      "format"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "404": {
            "description": "not visible",
            "schema": {
              "$schema": "http://json-schema.org/draft-06/schema#",
              "title": "Stats JSON API Schema",
              "description": "JSON API schema for Stats objects.",
              "oneOf": [
                {
                  "$ref": "#/definitions/success"
                },
                {
                  "$ref": "#/definitions/failure"
                },
                {
                  "$ref": "#/definitions/info"
                }
              ],
              "definitions": {
                "success": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/data"
                    },
                    "included": {
                      "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "description": "Link members related to the primary data.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/links"
                        },
                        {
                          "$ref": "#/definitions/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "failure": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/error"
                      },
                      "uniqueItems": true
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    }
                  },
                  "additionalProperties": false
                },
                "info": {
                  "type": "object",
                  "required": [
                    "meta"
                  ],
                  "properties": {
                    "meta": {
                      "$ref": "#/definitions/meta"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "jsonapi": {
                      "$ref": "#/definitions/jsonapi"
                    }
                  },
                  "additionalProperties": false
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "data": {
                  "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/resource"
                    },
                    {
                      "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/resource"
                      },
                      "uniqueItems": true
                    },
                    {
                      "description": "null if the request is one that might correspond to a single resource, but doesn't currently.",
                      "type": "null"
                    }
                  ]
                },
                "resource": {
                  "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/definitions/attributes"
                    },
                    "relationships": {
                      "$ref": "#/definitions/relationships"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "relationshipLinks": {
                  "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
                  "type": "object",
                  "properties": {
                    "self": {
                      "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                      "$ref": "#/definitions/link"
                    },
                    "related": {
                      "$ref": "#/definitions/link"
                    }
                  },
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/link"
                  }
                },
                "link": {
                  "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
                  "oneOf": [
                    {
                      "description": "A string containing the link's URL.",
                      "type": "string",
                      "format": "uri-reference"
                    },
                    {
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "A string containing the link's URL.",
                          "type": "string",
                          "format": "uri-reference"
                        },
                        "meta": {
                          "$ref": "#/definitions/meta"
                        }
                      }
                    }
                  ]
                },
                "attributes": {
                  "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "value"
                    ]
                  }
                },
                "relationships": {
                  "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
                  "type": "object",
                  "additionalProperties": false,
                  "propertyNames": {
                    "enum": [
                      "application",
                      "application_user",
                      "resource",
                      "format"
                    ]
                  }
                },
                "relationshipToOne": {
                  "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/empty"
                    },
                    {
                      "$ref": "#/definitions/linkage"
                    }
                  ]
                },
                "relationshipToMany": {
                  "description": "An array of objects each containing \"type\" and \"id\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/linkage"
                  },
                  "uniqueItems": true
                },
                "empty": {
                  "description": "Describes an empty to-one relationship.",
                  "type": "null"
                },
                "linkage": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "description": "The first page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "last": {
                      "description": "The last page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "prev": {
                      "description": "The previous page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "next": {
                      "description": "The next page of data",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "uri-reference"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this particular occurrence of the problem.",
                      "type": "string"
                    },
                    "links": {
                      "$ref": "#/definitions/links"
                    },
                    "status": {
                      "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                      "type": "string"
                    },
                    "code": {
                      "description": "An application-specific error code, expressed as a string value.",
                      "type": "string"
                    },
                    "title": {
                      "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
                      "type": "string"
                    },
                    "detail": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "pointer": {
                          "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                          "type": "string"
                        },
                        "parameter": {
                          "description": "A string indicating which query parameter caused the error.",
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "$ref": "#/definitions/meta"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "apiToken": []
          }
        ],
        "consumes": [
          "application/vnd.api.metadata.a15k.org+json"
        ]
      }
    }
  }
}